Call with args:
Namespace(LR=0.0002, batch_size=1, checkpoint='', cls_list='SYMIX,MAKEMIX', content_layer='r41', d_repeat=3, data_path='makeup/red/red', dataset='RED', decay=0, direct=True, epochs=300, eye=True, g_repeat=6, gpus='0', lambda_cls=1.0, lambda_eye=1.0, lambda_his=1.0, lambda_rec=10, lambda_skin_1=0.1, lambda_skin_2=0.1, lambda_vgg=0.005, lips=True, model='PSGAN', ndis=1, norm='SN', skin=True, task_name='', vis_step=1260, whichG='branch')
{'multi_gpu': False, 'gpu_ids': [0], 'snapshot_path': './snapshot/', 'pretrained_path': './snapshot/', 'vis_path': './visulization/', 'log_path': './log/', 'data_path': './data', 'task_name': '', 'LR': 0.0002, 'D_LR': 0.0002, 'beta1': 0.5, 'beta2': 0.999, 'c_dim': 2, 'num_epochs': 300, 'num_epochs_decay': 0, 'ndis': 1, 'snapshot_step': 1260, 'log_step': 10, 'vis_step': 1260, 'batch_size': 1, 'lambda_A': 10, 'lambda_B': 10, 'lambda_idt': 0.5, 'img_size': 256, 'g_conv_dim': 64, 'd_conv_dim': 64, 'g_repeat_num': 6, 'd_repeat_num': 3, 'checkpoint': '', 'test_model': '51_2000', 'lambda_cls': 1.0, 'G_LR': 0.0002, 'whichG': 'branch', 'norm': 'SN', 'lambda_his': 1.0, 'lambda_vgg': 0.005, 'cls_list': ['SYMIX', 'MAKEMIX'], 'content_layer': ['r41'], 'direct': True, 'lips': True, 'skin': True, 'eye': True, 'g_repeat': 6, 'lambda_his_lip': 1.0, 'lambda_his_skin_1': 0.1, 'lambda_his_skin_2': 0.1, 'lambda_his_eye': 1.0}
The config is:
{'multi_gpu': False, 'gpu_ids': [0], 'snapshot_path': './snapshot/', 'pretrained_path': './snapshot/', 'vis_path': './visulization/', 'log_path': './log/', 'data_path': './data', 'task_name': '', 'LR': 0.0002, 'D_LR': 0.0002, 'beta1': 0.5, 'beta2': 0.999, 'c_dim': 2, 'num_epochs': 300, 'num_epochs_decay': 0, 'ndis': 1, 'snapshot_step': 1260, 'log_step': 10, 'vis_step': 1260, 'batch_size': 1, 'lambda_A': 10, 'lambda_B': 10, 'lambda_idt': 0.5, 'img_size': 256, 'g_conv_dim': 64, 'd_conv_dim': 64, 'g_repeat_num': 6, 'd_repeat_num': 3, 'checkpoint': '', 'test_model': '51_2000', 'lambda_cls': 1.0, 'G_LR': 0.0002, 'whichG': 'branch', 'norm': 'SN', 'lambda_his': 1.0, 'lambda_vgg': 0.005, 'cls_list': ['SYMIX', 'MAKEMIX'], 'content_layer': ['r41'], 'direct': True, 'lips': True, 'skin': True, 'eye': True, 'g_repeat': 6, 'lambda_his_lip': 1.0, 'lambda_his_skin_1': 0.1, 'lambda_his_skin_2': 0.1, 'lambda_his_eye': 1.0}
./data
Start preprocessing dataset..!
Finished preprocessing dataset..!
Start preprocessing dataset..!
Finished preprocessing dataset..!
G
Generator_PS(
  (amm): AMM(
    (conv1): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (Demakeup): DeMakeup(
    (encoder): Sequential(
      (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (5): ReLU(inplace=True)
      (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (7): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (8): ReLU(inplace=True)
      (9): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (10): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (11): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
    )
  )
  (Remakeup): ReMakeup(
    (decoder): Sequential(
      (0): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (1): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (2): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (3): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (5): ReLU(inplace=True)
      (6): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (7): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (8): ReLU(inplace=True)
      (9): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (10): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (11): ReLU(inplace=True)
      (12): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (13): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (14): ReLU(inplace=True)
      (15): Conv2d(64, 3, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (16): Tanh()
    )
  )
  (MDNet): MakeupDistillation(
    (decoder): Sequential(
      (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (5): ReLU(inplace=True)
      (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (7): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      (8): ReLU(inplace=True)
      (9): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (10): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (11): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (12): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (13): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (14): ResidualBlock(
        (main): Sequential(
          (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
    )
  )
)./train.sh: line 6: 18828 Killed                  python train.py --data_path=$data_path --dataset=$dataset
